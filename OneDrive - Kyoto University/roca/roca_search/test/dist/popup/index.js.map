{"version":3,"file":"popup/index.js","mappings":";;;;;AAAA;AACA;AACA,uBAAuB,kCAAkC;AACzD;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA,+CAA+C;AAC/C,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,2CAA2C,uBAAuB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,SAAS,oBAAoB,SAAS;AACxH,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC","sources":["webpack://sampleext/./popup.js"],"sourcesContent":["$(function() {\r\n    // アクティブなタブの情報を取得\r\n    chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\r\n      var activeTab = tabs[0];\r\n      var activeTabUrl = activeTab.url; // アクティブなタブのURLを取得\r\n  \r\n      // ストレージから保存されているURLの配列を取得\r\n      chrome.storage.local.get(\"urls\", function(result) {\r\n        var urls = result.urls ? result.urls : [];\r\n        urls.push(activeTabUrl); // 新しいURLを追加\r\n  \r\n        // URLの配列が3を超えた場合、最も古いURLを削除\r\n        while (urls.length > 3) {\r\n          urls.shift(); // 配列の先頭要素（最も古いURL）を削除\r\n        }\r\n  \r\n        // ストレージに更新されたURLの配列を保存\r\n        chrome.storage.local.set({\"urls\": urls}, function() {\r\n          // HTMLにURLを表示（最新の3つ）\r\n          $(\"#title\").html(urls.join(\"<br>\")); // 配列の要素を<br>で結合して表示\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  $(document).ready(function() {\r\n    chrome.storage.local.get(['urls'], function(result) {\r\n        if (chrome.runtime.lastError) {\r\n            console.error(chrome.runtime.lastError);\r\n            return;\r\n        }\r\n        console.log('urls', result.urls);\r\n        const urls = result.urls;\r\n        const data = JSON.stringify({ urls });\r\n\r\n        $.ajax({\r\n            url: 'https://dhsge5zjrc.execute-api.us-east-1.amazonaws.com/openai_and_linkpreview',\r\n            type: 'POST',\r\n            contentType: 'application/json',\r\n            data: data,\r\n            success: function(response) {\r\n                console.log(response);\r\n                // APIレスポンスを扱う前にレスポンスオブジェクトを配列に変換\r\n                let items = Object.values(response); // オブジェクトの値から配列を生成\r\n                chrome.storage.local.set({ 'api-response': items }, function() {\r\n                    if (items && items.length > 0) {\r\n                        items.forEach(function(item, index) {\r\n                            // 各要素にデータを割り当てる\r\n                            $(\"#myimage\" + (index + 1)).attr(\"src\", item.image || '');\r\n                            $(\"#mytitle\" + (index + 1)).text(item.title || '');\r\n                            $(\"#mydescription\" + (index + 1)).text(item.description || '');\r\n                            // URL を表示する場合は、リンクとして設定\r\n                            $(\"#myurl\" + (index + 1)).html(item.url ? `<a href=\"${item.url}\" target=\"_blank\">${item.url}</a>` : '');\r\n                        });\r\n                    } else {\r\n                        console.log('No data received from API.');\r\n                    }\r\n                });\r\n            },\r\n            error: function(error) {\r\n                console.error('Error:', error);\r\n            }\r\n        });\r\n    });\r\n});\r\n"],"names":[],"sourceRoot":""}